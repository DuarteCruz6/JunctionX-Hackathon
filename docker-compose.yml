version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"

  backend:
    build: ./backend
    container_name: backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/code
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # Add default values for required environment variables
      - HF_API_TOKEN=${HF_API_TOKEN:-dummy_token}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-dummy_key}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-dummy_secret}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET:-dummy_bucket}
      - FIREBASE_CREDENTIALS=${FIREBASE_CREDENTIALS:-dummy_creds}
      
    depends_on:
      - redis

  worker:
    build: ./backend
    container_name: celery_worker
    command: celery -A core.tasks.celery_tasks.celery_app worker --loglevel=info
    volumes:
      - ./backend:/code
    environment:
      # Note: We use 'redis' as the hostname because services can
      # communicate using their service names inside the Docker network.
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      # Add default values for required environment variables
      - HF_API_TOKEN=${HF_API_TOKEN:-dummy_token}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-dummy_key}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-dummy_secret}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET:-dummy_bucket}
      - FIREBASE_CREDENTIALS=${FIREBASE_CREDENTIALS:-dummy_creds}
      
    depends_on:
      - redis

  frontend:
    build: ./frontend
    container_name: frontend
    # Serve the production build via nginx on container port 80 -> host 3000
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production